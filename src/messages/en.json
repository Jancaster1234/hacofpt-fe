{
  "_comment": "This is the English translation file. Path: src/messages/en.json",
  "common": {
    "languages": {
      "english": "English",
      "vietnamese": "Vietnamese"
    },
    "loading": "Loading...",
    "notAvailable": "N/A",
    "close": "Close"
  },
  "navigation": {
    "home": "Home",
    "about": "About",
    "contact": "Contact"
  },
  "home": {
    "title": "Welcome to our website",
    "description": "This is a multi-language website."
  },
  "hero": {
    "exploreHackathon": "Explore Hackathon",
    "title": "Discover Breakthrough Ideas at FPTU Hackathon",
    "subtitle": "Join FPTU students on a journey of creativity and innovation.",
    "getStarted": "Get Started",
    "worldBackgroundAlt": "World Background",
    "hackathon1Alt": "Hackathon 1",
    "hackathon2Alt": "Hackathon 2",
    "hackathon3Alt": "Hackathon 3"
  },
  "services": {
    "sectionTitle": "SERVICES",
    "sectionDescription": "A platform for managing hackathon competitions exclusively for FPTU students.",
    "service1": {
      "title": "Manage Registrations",
      "subtitle": "Easy registration and progress tracking"
    },
    "service2": {
      "title": "Efficient Organization",
      "subtitle": "Tools for scheduling and notifications"
    },
    "service3": {
      "title": "Team Collaboration",
      "subtitle": "Seamless communication for teams"
    },
    "service4": {
      "title": "Real-time Insights",
      "subtitle": "Track hackathon progress with analytics"
    }
  },
  "hackathon": {
    "hackathonPageTitle": "Explore hackathons",
    "searchPlaceholder": "Search hackathons by title...",
    "searchHackathons": "Search hackathons",
    "sortBy": "Sort by",
    "sortBySuggestion": "Suggestion",
    "sortByLatest": "Latest",
    "noHackathonsFound": "No hackathons found. Try adjusting your filters.",
    "failedToLoad": "Failed to load hackathons. Please try again later.",
    "errorFetchingHackathons": "Error fetching hackathons. Please try again.",
    "resultsCount": "Found {count} hackathons",
    "filters": "Filters",
    "filterBy": "Filter by",
    "status": "Status",
    "statusOpen": "Open",
    "statusOngoing": "Ongoing",
    "statusClosed": "Closed",
    "categories": "Categories",
    "categoryAI": "AI",
    "categoryWebDevelopment": "Web Development",
    "categoryMobile": "Mobile",
    "categoryBlockchain": "Blockchain",
    "categoryIoT": "IoT",
    "organizations": "Organizations",
    "organizationFPT": "FPT",
    "organizationMicrosoft": "Microsoft",
    "organizationGoogle": "Google",
    "organizationAmazon": "Amazon",
    "organizationMeta": "Meta",
    "categoryCodingHackathons": "Coding Hackathons",
    "categoryExternalHackathons": "External Hackathons",
    "categoryInternalHackathons": "Internal Hackathons",
    "categoryDesignHackathons": "Design Hackathons",
    "categoryOthers": "Others",
    "organizationFPTU": "FPTU",
    "organizationNASA": "NASA",
    "organizationIAIHACKATHON": "IAI HACKATHON",
    "organizationCEHackathon": "CE Hackathon",
    "organizationOthers": "Others",
    "statusUpcoming": "Upcoming",
    "viewingHackathon": "Viewing hackathon",
    "bannerAlt": "Hackathon banner image",
    "loading": "Loading...",
    "updating": "Updating...",
    "enroll": "Enroll",
    "viewTeamEnrollment": "View team enrollment",
    "viewTeamRequest": "View team request",
    "viewIndividualEnrollment": "View individual enrollment",
    "requestMentorship": "Request mentorship",
    "viewMentorship": "View mentorship",
    "viewMentorshipRequest": "View mentorship request",
    "goToBoard": "Go to board",
    "feedback": "Feedback",
    "teamMemberOnly": "Only team members can enroll in hackathons",
    "onePersonRegistered": "1 person has registered to participate",
    "multiplePersonsRegistered": "{count} people have registered to participate",
    "loadingData": "Loading hackathon data...",
    "dataLoadedSuccess": "Hackathon data loaded successfully",
    "dataLoadError": "Failed to load hackathon data. Please try again later.",
    "dataLoadErrorTitle": "Data loading error",
    "updatingData": "Updating mentorship data...",
    "dataUpdateSuccess": "Mentorship data has been successfully updated",
    "dataUpdatedTitle": "Data updated",
    "dataUpdateError": "Failed to update mentorship data. Please try again later.",
    "updateErrorTitle": "Update error",
    "refreshingEnrollmentData": "Refreshing enrollment data...",
    "enrollmentDataRefreshed": "Enrollment data refreshed successfully",
    "enrollmentDataRefreshError": "Failed to refresh enrollment data"
  },
  "pagination": {
    "previousPage": "Previous page",
    "nextPage": "Next page",
    "pageInfo": "{current} / {total}"
  },
  "loadingSpinner": {
    "loading": "Loading..."
  },

  "hackathonCard": {
    "enroll": "Enrollment period",
    "viewDetails": "View details"
  },

  "hackathonDetail": {
    "pageTitle": "Hackathon Details",
    "loading": "Loading hackathon details...",
    "errorLoading": "Error loading hackathon details",
    "loadedSuccessfully": "Hackathon details loaded successfully",
    "failedToLoad": "Failed to load hackathon details",
    "noHackathonFound": "No hackathon found with this ID"
  },

  "hackathonTabs": {
    "tabs": {
      "information": "Information",
      "description": "Description",
      "participant": "Participants",
      "documentation": "Documentation",
      "contact": "Contact"
    },
    "subtabs": {
      "teams": "Teams",
      "individuals": "Individuals"
    }
  },
  "enrollment": {
    "overviewTitle": "Enrollment overview",
    "myTeams": "My teams",
    "teamRequests": "Team requests",
    "individualRegistrations": "Individual registrations",
    "close": "Close"
  },
  "individualRegistration": {
    "yourRegistrations": "Your individual registrations",
    "registerAsIndividual": "Register as individual",
    "processing": "Processing...",
    "noRegistrationsFound": "No individual enrollments found.",
    "clickToRegister": "Click the button above to register as an individual.",
    "registrationFor": "Registration for {title}",
    "status": "Status",
    "submitted": "Submitted",
    "reviewedBy": "Reviewed by",
    "deleteRegistration": "Delete registration",
    "statusPENDING": "Pending",
    "statusAPPROVED": "Approved",
    "statusREJECTED": "Rejected",
    "statusUNDER_REVIEW": "Under review",
    "warningExistingRegistration": "You already have an individual registration with status: {status}",
    "warningExistingTeamRequest": "You already have a team request with status: {status}",
    "errorAlreadyRegisteredIndividual": "You already have an individual registration for this hackathon with status: {status}.",
    "errorAlreadyTeamRequest": "You already have a team request for this hackathon with status: {status}. Please cancel it first to register as an individual.",
    "registrationSuccess": "Your individual registration has been submitted successfully.",
    "registrationError": "Failed to create individual registration. Please try again.",
    "registrationErrorUnexpected": "An unexpected error occurred while creating your registration.",
    "deletionErrorNonPending": "You can only delete registrations with PENDING status. Current status: {status}",
    "registrationDeleted": "Your individual registration has been deleted successfully.",
    "deletionError": "Failed to delete individual registration. Please try again.",
    "submittingRegistration": "Submitting your registration...",
    "deletingRegistration": "Deleting your registration..."
  },
  "teamRequests": {
    "yourTeamRequests": "Your team requests",
    "createTeamRequest": "Create team request",
    "teamName": "Team name",
    "enterTeamName": "Enter team name",
    "teamNote": "Team note (Optional)",
    "optionalTeamNote": "Optional team note or description",
    "teamMembers": "Team members (Min: {min}, Max: {max})",
    "searchByEmailOrName": "Search by email or name",
    "youLabel": "You",
    "removeMember": "Remove member",
    "searching": "Searching...",
    "creating": "Creating...",
    "cancel": "Cancel",
    "noTeamRequests": "No team requests found.",
    "clickToCreate": "Click the button above to create a new team request.",
    "teamNameLabel": "Team name:",
    "statusLabel": "Status:",
    "deadlineLabel": "Deadline:",
    "noteLabel": "Note:",
    "teamMembersLabel": "Team members:",
    "deleteRequest": "Delete request",
    "requestAlreadyExists": "You already have a team request for this hackathon with status: {status}.",
    "individualRegistrationExists": "You already have an individual registration for this hackathon with status: {status}. Please cancel it first to create a team request.",
    "existingTeamRequestReason": "You already have a team request with status: {status}",
    "existingIndividualRegistrationReason": "You have an individual registration with status: {status}. Please cancel it first.",
    "errorFetchingMembers": "Failed to fetch team members",
    "searchError": "Error searching for users",
    "cannotDeleteRequest": "You can only delete team requests with pending or under review status. Current status: {status}",
    "requestDeleted": "Team request deleted successfully",
    "deleteFailed": "Failed to delete team request",
    "missingTeamName": "Please enter a team name",
    "notEnoughMembers": "You need at least {minimumTeamMembers} team members (including yourself)",
    "tooManyMembers": "Maximum team size is {maximumTeamMembers}",
    "teamRequestCreated": "Team request created successfully!",
    "creationFailed": "Failed to create team request",
    "maximumSizeReached": "Maximum team size is {maximumTeamMembers}",
    "locale": "en"
  },
  "teams": {
    "yourTeams": "Your teams",
    "noTeams": "You are not part of any teams for this hackathon.",
    "joinOrCreateTeam": "Join a team or create a team request to participate with others.",
    "membersCount": "{count} team members",
    "teamMembers": "Team members",
    "leader": "Leader",
    "teamDetails": "Team details",
    "created": "Created",
    "hackathon": "Hackathon",
    "project": "Project",
    "projectName": "Name",
    "description": "Description",
    "goToBoard": "Go to board",
    "navigationError": "Navigation error occurred. Please try again.",
    "hackathonInfoError": "Could not find hackathon information for this team.",
    "status": {
      "active": "Active",
      "inactive": "Inactive",
      "pending": "Pending",
      "approved": "Approved",
      "rejected": "Rejected",
      "completed": "Completed"
    }
  },
  "mentorship": {
    "mentorshipOverview": "Mentorship overview",
    "tabMentorTeams": "Mentor teams",
    "tabMentorshipRequests": "Mentorship requests",
    "tabSessionRequests": "Session requests",
    "tabRequestMentor": "Request a mentor",
    "loadingMentors": "Loading mentors...",
    "mentorLoadError": "Failed to load mentors. Please try again later.",
    "creatingRequest": "Creating mentorship request...",
    "requestCreatedSuccess": "Mentorship request created successfully",
    "requestCreationError": "Failed to create mentorship request. Please try again later.",
    "deletingRequest": "Deleting mentorship request...",
    "requestDeletedSuccess": "Mentorship request deleted successfully",
    "requestDeletionError": "Failed to delete mentorship request. Please try again later.",
    "creatingSessionRequest": "Creating session request...",
    "sessionRequestCreatedSuccess": "Session request created successfully",
    "sessionRequestCreationError": "Failed to create session request. Please try again later.",
    "updatingSessionRequest": "Updating session request...",
    "sessionRequestUpdatedSuccess": "Session request updated successfully",
    "sessionRequestUpdateError": "Failed to update session request. Please try again later.",
    "close": "Close"
  },
  "mentorTeams": {
    "requestNewSession": "Request a new session",
    "sessionRequests": "Session requests",
    "noSessionRequests": "No session requests yet",
    "requestSession": "Request session",
    "noMentors": "No assigned mentors yet",
    "requestMentorTip": "Request a mentor from the \"Request a Mentor\" tab",
    "sessionRequestSuccess": "Session request created successfully",
    "sessionRequestError": "Failed to create session request",
    "statusApproved": "Approved",
    "statusRejected": "Rejected",
    "statusPending": "Pending",
    "statusUnknown": "Unknown"
  },
  "sessionForm": {
    "description": "Description",
    "descriptionPlaceholder": "What would you like to discuss?",
    "startTime": "Start time",
    "endTime": "End time",
    "location": "Location",
    "locationPlaceholder": "Where would you like to meet? (Room name, online link, etc.)",
    "cancel": "Cancel",
    "requestSession": "Request session",
    "updateSession": "Update session",
    "submitting": "Submitting...",
    "startTimeRequired": "Start time is required",
    "endTimeRequired": "End time is required",
    "endTimeAfterStart": "End time must be after start time",
    "locationRequired": "Location is required",
    "descriptionRequired": "Description is required"
  },
  "mentorshipRequests": {
    "cancelRequest": "Cancel request",
    "cancelRequestSuccess": "Mentorship request cancelled successfully",
    "cancelRequestError": "Failed to cancel mentorship request",
    "evaluatedBy": "Evaluated by",
    "date": "Date",
    "noRequests": "No pending mentorship requests",
    "requestFromTab": "Request a mentor from the \"Request a Mentor\" tab",
    "status": {
      "approved": "Approved",
      "rejected": "Rejected",
      "pending": "Pending",
      "deleted": "Deleted",
      "completed": "Completed"
    }
  },
  "sessionRequests": {
    "editRequest": "Edit session request",
    "confirmCancel": "Are you sure you want to cancel this session request?",
    "cancelSuccess": "Session request cancelled successfully",
    "cancelError": "Failed to cancel session request",
    "updateSuccess": "Session request updated successfully",
    "updateError": "Failed to update session request",
    "at": "at",
    "evaluatedBy": "Evaluated by",
    "date": "Date",
    "cancel": "Cancel",
    "edit": "Edit",
    "joinSession": "Join session",
    "noRequests": "No session requests yet",
    "status": {
      "approved": "Approved",
      "rejected": "Rejected",
      "pending": "Pending",
      "deleted": "Deleted",
      "completed": "Completed"
    }
  },
  "requestMentor": {
    "requestSuccess": "Mentorship request sent successfully",
    "requestError": "Failed to send mentorship request",
    "teams": "teams",
    "mentorAtCapacity": "Mentor at capacity",
    "requestMentorship": "Request mentorship",
    "noMentorsAvailable": "No mentors available at the moment"
  },
  "hackathonBoard": {
    "tabs": {
      "taskBoard": "Task Board",
      "submissionAndResult": "Submission and Result",
      "schedule": "Schedule"
    },
    "errors": {
      "failedToLoadTeam": "Failed to load team data",
      "failedToLoadBoards": "Failed to load boards",
      "failedToLoadInitialData": "Failed to load initial data",
      "failedToFetchRounds": "Failed to fetch rounds",
      "failedToLoadRounds": "Failed to load rounds data"
    }
  },
  "submissionAndResult": {
    "rewardRecipientList": "Reward Recipient List",
    "submission": "Submission",
    "result": "Result",
    "noRoundsAvailable": "No rounds available.",
    "notifications": {
      "submissionCreated": "Submission created successfully",
      "submissionUpdated": "Submission updated successfully"
    },
    "errors": {
      "invalidResponseFormat": "Invalid response format from API",
      "unknownError": "Unknown error occurred"
    }
  },
  "submission": {
    "roundStartsAt": "Round starts at",
    "deadlinePassed": "Deadline Passed",
    "dayAbbreviation": "d",
    "selectFilesError": "Please select at least one file to submit",
    "submissionError": "Submission error",
    "submitting": "Submitting...",
    "submissionUpdated": "Your submission has been updated",
    "submissionSuccessful": "Your work has been submitted successfully",
    "submissionSuccessTitle": "Submission successful",
    "submissionFailedTryAgain": "Failed to submit. Please try again",
    "unknownError": "An unknown error occurred while submitting your work",
    "submissionFailed": "Submission failed",
    "teamSubmittedSuccessfully": "Your team has submitted successfully",
    "yourSubmission": "Your submission",
    "submittedFiles": "Submitted files",
    "download": "Download",
    "timeLeft": "Time left",
    "submitDueDate": "Submit due date",
    "submissionPeriodEnded": "Submission period has ended",
    "resubmitWork": "Resubmit your work for",
    "submitWork": "Submit your work for",
    "selectFiles": "Select files",
    "selectedFiles": "Selected files",
    "remove": "Remove",
    "cancel": "Cancel",
    "resubmit": "Resubmit",
    "submit": "Submit"
  },
  "hackathonResults": {
    "title": "Hackathon results",
    "placement": "Placement",
    "team": "Team",
    "teamLead": "Team lead",
    "members": "Members",
    "score": "Score",
    "award": "Award",
    "noResultsAvailable": "No results available for this hackathon yet.",
    "resultsAfterJudging": "Results will be published after judging is completed.",
    "unknownTeam": "Unknown team",
    "notAvailable": "Not available",
    "noAdditionalMembers": "No additional members",
    "noAward": "No award",
    "fetchSuccess": "Hackathon results loaded successfully",
    "fetchError": "Failed to load hackathon results. Please try again later.",
    "noResults": "No results found for this hackathon"
  },
  "results": {
    "errorProcessingResults": "Error processing results",
    "failedToProcessResults": "Failed to process submission results",
    "noSubmissionsAvailable": "No submissions available for this round.",
    "noSubmittedWorkFound": "No submitted work found for evaluation.",
    "submissionNotEvaluated": "Your submission has not been evaluated by judges yet.",
    "yourSubmission": "Your submission",
    "submittedAt": "Submitted at",
    "createdBy": "Created by",
    "submittedFiles": "Submitted files",
    "download": "Download",
    "resultsFor": "Results for",
    "submissionSummary": "Submission summary",
    "submittedBy": "Submitted by",
    "submissionDate": "Submission date",
    "finalScore": "Final score",
    "pending": "Pending",
    "evaluationStatus": "Evaluation status",
    "judge": "judge",
    "judges": "judges",
    "completed": "completed",
    "judgeEvaluations": "Judge evaluations",
    "pts": "pts",
    "overallScore": "Overall score",
    "generalFeedback": "General feedback",
    "evaluationCriteria": "Evaluation criteria",
    "uploaded": "Uploaded",
    "overallResultsSummary": "Overall results summary",
    "totalScore": "Total score",
    "basedOnEvaluations": "Based on evaluations from"
  }
}
